{% extends "layout.twig" %}

{% block title %}Data{% endblock %}

{% block body %}
<body id="page-top" class="index">

    <!-- Navigation -->
    <nav id="mainNav" class="navbar navbar-default navbar-custom navbar-fixed-top">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header page-scroll">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span> Menu <i class="fa fa-bars"></i>
                </button>
                <a class="navbar-brand page-scroll" href="#page-top">iOT Project</a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                    <li class="hidden">
                        <a href="#page-top"></a>
                    </li>
                    <li>
                        <a class="page-scroll" href="#cpu">CPU</a>
                    </li>
                    <li>
                        <a class="page-scroll" href="#memory">Memory</a>
                    </li>
                    <li>
                        <a class="page-scroll" href="#processus">Processus</a>
                    </li>
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container-fluid -->
    </nav>
    <header>
        <div class="container">
            <div class="intro-text">
                <div class="intro-heading">Dashboard</div>
                <div class="intro-lead-in">This the server system dashboard</div>
                <a href="#" class="page-scroll btn btn-stop" id="closeConnectionBtn">
                    <span class="glyphicon glyphicon-off" aria-hidden="true"></span> ArrÃªt
                </a>
            </div>
        </div>
    </header>

    <section id="cpu" class="bg-light-gray">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <h2 class="section-heading">CPU dashborad</h2>
                </div>
            </div>

            <div class="col-xs-6 col-md-8">
                <div id="gaugeCPU"></div>
            </div>
            <div class="col-xs-6 col-md-8">
                <canvas id="mycanvasCPU"  width="400" height="90"></canvas>
            </div>
            <div class="col-xs-6 col-md-8">
                <div id="gaugeThread"></div>
            </div>
            <div class="col-xs-6 col-md-8">
                <canvas id="mycanvasThread" width="400" height="90"></canvas>
            </div>

        </div>
    </section>

    <section id="memory" class="bg-light-gray">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <h2 class="section-heading">Memory dashborad</h2>
                </div>
            </div>

            <div class="col-xs-6 col-md-8">
                <div id="gaugeMemory"></div>
            </div>
            <div class="col-xs-6 col-md-8">
                <canvas id="mycanvasMemory" width="400" height="90"></canvas>
            </div>

        </div>
    </section>

    <section id="processus" class="bg-light-gray">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <h2 class="section-heading">Processus dashborad</h2>
                </div>
            </div>

            <div class="col-xs-6 col-md-8">
                <div id="gaugeProc"></div>
            </div>
            <div class="col-xs-6 col-md-8">
                <canvas id="mycanvasProc" width="400" height="90"></canvas>
            </div>

        </div>
    </section>

    <script src="/javascripts/lib/jquery-3.1.1.min.js"></script>
    <script src="/javascripts/bootstrap/bootstrap.min.js"></script>
    <script src="/javascripts/justgage/raphael-2.1.4.min.js"></script>
    <script src="javascripts/justgage/justgage.js"></script>
    <script src="/javascripts/chart/smoothie.js"></script>
    <script src="/javascripts/socket.io/socket.io.js"></script>
    <script>

        var cpuLine = new TimeSeries();
        var threadLine = new TimeSeries();

        var gC;
        var gM;
        var gP;

        gC = new JustGage({
            id: "gaugeCPU",
            value: 0,
            min: 0,
            max: 500,
            title: "CPU"
        });

        gM = new JustGage({
            id: "gaugeMemory",
            value: 0,
            min: 0,
            max: 500,
            title: "Memory"
        });

        gP = new JustGage({
            id: "gaugeProc",
            value: 0,
            min: 0,
            max: 500,
            title: "Processus"
        });


        var socket = io.connect('http://localhost:3001');
        console.log('socket connected ', socket.connected);
        socket.on('connection',function(){
            console.log('client se connect')
        });

        socket.on('newData', function (newData) {
            console.log('Le serveur a un message pour vous : ' + newData.cpu);
            cpuLine.append(new Date().getTime(), newData.cpu);
            threadLine.append(new Date().getTime(), newData.thread);
            gC.refresh(newData.cpu);
            gM.refresh(newData.thread);
//            gP.refresh(newData.proc);


        });

        $('#closeConnectionBtn').on('click', function (e) {
            socket.emit("disconnect", 'close');
            socket.disconnect();
            window.location.href = '/';
            socket.connect();
        });

        var smoothieCPU = new SmoothieChart({
            grid: {
                strokeStyle: 'rgb(125, 0, 0)', fillStyle: 'rgb(60, 0, 0)',
                lineWidth: 1, millisPerLine: 250, verticalSections: 6,
            },
            labels: {fillStyle: 'rgb(60, 0, 0)'}
        });

        var smoothieThread = new SmoothieChart({
            grid: {
                strokeStyle: 'rgb(125, 0, 0)', fillStyle: 'rgb(60, 0, 0)',
                lineWidth: 1, millisPerLine: 250, verticalSections: 6,
            },
            labels: {fillStyle: 'rgb(60, 0, 0)'}
        });

        smoothieCPU.addTimeSeries(cpuLine, {
            strokeStyle: 'rgb(0, 255, 0)',
            fillStyle: 'rgba(0, 255, 0, 0.4)',
            lineWidth: 3
        });
        smoothieThread.addTimeSeries(threadLine, {
            strokeStyle: 'rgb(255, 0, 255)',
            fillStyle: 'rgba(255, 0, 255, 0.3)',
            lineWidth: 3
        });

        smoothieCPU.streamTo(document.getElementById('mycanvasCPU'), 100);
        smoothieThread.streamTo(document.getElementById('mycanvasMemory'), 100);
    </script>
</body>
{% endblock %}
